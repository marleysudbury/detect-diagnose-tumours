# Calculate AUC from classification classification_confidences

import tensorflow as tf

classification_confidences = [0.9986876845359802, 0.6393933296203613, 0.9999982118606567, 0.6168771982192993, 0.9998856782913208, 0.9999972581863403, 0.9973983764648438, 0.9913395047187805, 0.13771742582321167, 0.45028358697891235, 0.14038467407226562, 0.056493282318115234, 0.9986097812652588, 0.9999982118606567, 0.802621603012085, 0.943293571472168, 0.02367931604385376, 0.17536985874176025, 0.9999954700469971, 0.03197604417800903, 0.9999972581863403, 0.9982927441596985, 0.9999939203262329, 0.6959754824638367, 0.9999735355377197, 0.9999998807907104, 0.6539979577064514, 0.9999998807907104, 0.999953031539917, 0.9843909740447998, 0.9998636245727539, 0.9998636245727539, 0.9985275268554688, 0.6325693130493164, 0.7610277533531189, 0.8989521265029907, 0.9975462555885315, 0.8479477763175964, 0.8479477763175964, 0.99994957447052, 0.9999382495880127, 0.999495267868042, 0.9523826241493225, 1.0, 0.87625652551651, 0.9998326301574707, 0.9999994039535522, 0.9999338388442993, 0.9998695850372314, 0.9999487400054932, 0.9999754428863525, 0.9999589920043945, 0.9986728429794312,
                              0.9999767541885376, 0.048266470432281494, 0.9898082613945007, 0.9999730587005615, 0.9999444484710693, 0.9999780654907227, 0.9999780654907227, 0.999988317489624, 0.9999362230300903, 0.9999362230300903, 0.9999890327453613, 0.9999680519104004, 0.9999878406524658, 0.9999440908432007, 0.9999991655349731, 0.9999717473983765, 0.9998995065689087, 0.9997802376747131, 0.9999918937683105, 0.999971866607666, 0.9997711777687073, 0.9999786615371704, 0.9985573887825012, 0.9999203681945801, 0.9999978542327881, 1.0, 0.9980637431144714, 0.9999632835388184, 0.9996115565299988, 0.9999542236328125, 0.9999867677688599, 0.9999980926513672, 0.9999983310699463, 0.5287498831748962, 0.9999725818634033, 0.9999680519104004, 0.9999881982803345, 0.9979401230812073, 0.9277696013450623, 0.9999359846115112, 0.9999960660934448, 0.9522597789764404, 1.0, 0.9998610019683838, 0.9998610019683838, 0.9998610019683838, 0.9999961853027344, 0.9964621663093567, 0.9998936653137207, 0.9858108758926392, 0.9999755620956421, 0.999843955039978, 0.9999788999557495, 0.9999704360961914, 0.999998927116394, 0.9999995231628418]


# 50 normal, 50 tumor
# correct = [0 for i in range(0, 50)] + [1 for i in range(0, 50)]
# 45 normal, 64 tumor
correct = [0 for i in range(0, 45)] + [1 for i in range(0, 64)]

m = tf.keras.metrics.AUC(num_thresholds=100)
m.update_state(correct, classification_confidences)
print(m.result().numpy())
